apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: cd-pipeline
spec:
  params:
    - description: The URL to the git repo
      name: GIT_REPO
      type: string
    - default: master
      description: the reference (branch or ref)
      name: GIT_REF
      type: string
    - default: orders
      description: Name of the application
      name: APP_NAME
      type: string
    - default: 'image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/$(params.APP_NAME):latest'
      description: The name of the image to build
      name: IMAGE_NAME
      type: string
    - default: 'https://orders-coyigbo-dev.apps.rm3.7wse.p1.openshiftapps.com/'
      description: Orders BASE_URL
      name: BASE_URL
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REF)
        - name: refspec
          value: ''
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: ''
        - name: sparseCheckoutDirectories
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: httpProxy
          value: ''
        - name: httpsProxy
          value: ''
        - name: noProxy
          value: ''
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: 'gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.40.2'
        - name: userHome
          value: /home/git
      taskRef:
        kind: Task
        name: git-clone
      workspaces:
        - name: output
          workspace: pipeline-workspace
    - name: pylint
      params:
        - name: image
          value: 'docker.io/python:3.11-slim'
        - name: path
          value: .
        - name: args
          value: []
        - name: requirements-file
          value: requirements.txt
        - name: MODULE_PATH
          value: service
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: pylint
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: testing
      params:
        - name: pytest-args
          value: []
        - name: secret-name
          value: postgres-creds
        - name: secret-key
          value: database_uri
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: pytest-env
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: buildah
      params:
        - name: IMAGE
          value: $(params.IMAGE_NAME)
        - name: DOCKERFILE
          value: ./Dockerfile
        - name: BUILD_ARGS
          value:
            - ''
        - name: CONTEXT
          value: .
        - name: STORAGE_DRIVER
          value: vfs
        - name: FORMAT
          value: oci
        - name: BUILD_EXTRA_ARGS
          value: ''
        - name: PUSH_EXTRA_ARGS
          value: ''
        - name: SKIP_PUSH
          value: 'false'
        - name: TLS_VERIFY
          value: 'true'
        - name: VERBOSE
          value: 'false'
      runAfter:
        - pylint
        - testing
      taskRef:
        kind: Task
        name: buildah
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: deploy-image
      params:
        - name: image-name
          value: $(params.IMAGE_NAME)
        - name: manifest-dir
          value: k8s
      runAfter:
        - buildah
      taskRef:
        kind: Task
        name: deploy-image
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: behave
      params:
        - name: base-url
          value: $(params.BASE_URL)
        - name: wait-seconds
          value: '60'
        - name: driver
          value: chrome
      runAfter:
        - deploy-image
      taskRef:
        kind: Task
        name: behave
      workspaces:
        - name: source
          workspace: pipeline-workspace
  workspaces:
    - name: pipeline-workspace