name: CI Build
on:
  push:
    branches:
      - master
    paths-ignore:
    - 'README.md'
    - '.vscode/**'
  pull_request:
    branches:
      - master
    paths-ignore:
    - 'README.md'
    - '.vscode/**'
jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.11-slim
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: pgs3cr3t
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          apt-get update && apt-get install -y curl
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          # Add Poetry to PATH
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          export PATH="$HOME/.local/bin:$PATH"
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false
        
      - name: Install project dependencies
        run: |
          poetry install --no-interaction --no-root
          
      - name: Run Code Quality Checks
        run: |
          poetry run flake8 service tests --count --select=E9,F63,F7,F82 --show-source --statistics
          poetry run flake8 service tests --count --max-complexity=10 --max-line-length=127 --statistics
          poetry run pylint service tests --max-line-length=127
          
      - name: Run unit tests with pytest
        run: |
          poetry run pytest --pspec --cov=service --cov-fail-under=95 --disable-warnings
        env:
          FLASK_APP: "wsgi:app"
          DATABASE_URI: "postgresql+psycopg://postgres:pgs3cr3t@postgres:5432/testdb"

      - name: Upload code coverage
        uses: codecov/codecov-action@v3.1.4